/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SaaSPlan as PrismaSaaSPlan } from "@prisma/client";

export class SaaSPlanServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SaaSPlanCountArgs, "select">): Promise<number> {
    return this.prisma.saaSPlan.count(args);
  }

  async saaSPlans(
    args: Prisma.SaaSPlanFindManyArgs
  ): Promise<PrismaSaaSPlan[]> {
    return this.prisma.saaSPlan.findMany(args);
  }
  async saaSPlan(
    args: Prisma.SaaSPlanFindUniqueArgs
  ): Promise<PrismaSaaSPlan | null> {
    return this.prisma.saaSPlan.findUnique(args);
  }
  async createSaaSPlan(
    args: Prisma.SaaSPlanCreateArgs
  ): Promise<PrismaSaaSPlan> {
    return this.prisma.saaSPlan.create(args);
  }
  async updateSaaSPlan(
    args: Prisma.SaaSPlanUpdateArgs
  ): Promise<PrismaSaaSPlan> {
    return this.prisma.saaSPlan.update(args);
  }
  async deleteSaaSPlan(
    args: Prisma.SaaSPlanDeleteArgs
  ): Promise<PrismaSaaSPlan> {
    return this.prisma.saaSPlan.delete(args);
  }
}
